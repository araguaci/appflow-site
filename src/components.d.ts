/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AnchorLink {
        "to": string;
    }
    interface AppBurger {
    }
    interface AppIcon {
        "name": string;
    }
    interface AppflowActivator {
    }
    interface AppflowSite {
    }
    interface AppflowSiteFooter {
    }
    interface AppflowSiteHeader {
    }
    interface AppflowSiteRoutes {
    }
    interface CodeSnippet {
        "code": string;
        "language": string;
    }
    interface LandingPage {
    }
    interface NewsletterForm {
    }
    interface PhoneAnimator {
    }
    interface PipelineAnimator {
    }
    interface SiteBackdrop {
        "visible": boolean;
    }
    interface SiteImg {
        "alt": string;
        "dimensions": string;
        "loading"?: 'lazy';
        "name": string;
        "path": string;
        "type": string;
    }
    interface WhyAppflow {
    }
}
declare global {
    interface HTMLAnchorLinkElement extends Components.AnchorLink, HTMLStencilElement {
    }
    var HTMLAnchorLinkElement: {
        prototype: HTMLAnchorLinkElement;
        new (): HTMLAnchorLinkElement;
    };
    interface HTMLAppBurgerElement extends Components.AppBurger, HTMLStencilElement {
    }
    var HTMLAppBurgerElement: {
        prototype: HTMLAppBurgerElement;
        new (): HTMLAppBurgerElement;
    };
    interface HTMLAppIconElement extends Components.AppIcon, HTMLStencilElement {
    }
    var HTMLAppIconElement: {
        prototype: HTMLAppIconElement;
        new (): HTMLAppIconElement;
    };
    interface HTMLAppflowActivatorElement extends Components.AppflowActivator, HTMLStencilElement {
    }
    var HTMLAppflowActivatorElement: {
        prototype: HTMLAppflowActivatorElement;
        new (): HTMLAppflowActivatorElement;
    };
    interface HTMLAppflowSiteElement extends Components.AppflowSite, HTMLStencilElement {
    }
    var HTMLAppflowSiteElement: {
        prototype: HTMLAppflowSiteElement;
        new (): HTMLAppflowSiteElement;
    };
    interface HTMLAppflowSiteFooterElement extends Components.AppflowSiteFooter, HTMLStencilElement {
    }
    var HTMLAppflowSiteFooterElement: {
        prototype: HTMLAppflowSiteFooterElement;
        new (): HTMLAppflowSiteFooterElement;
    };
    interface HTMLAppflowSiteHeaderElement extends Components.AppflowSiteHeader, HTMLStencilElement {
    }
    var HTMLAppflowSiteHeaderElement: {
        prototype: HTMLAppflowSiteHeaderElement;
        new (): HTMLAppflowSiteHeaderElement;
    };
    interface HTMLAppflowSiteRoutesElement extends Components.AppflowSiteRoutes, HTMLStencilElement {
    }
    var HTMLAppflowSiteRoutesElement: {
        prototype: HTMLAppflowSiteRoutesElement;
        new (): HTMLAppflowSiteRoutesElement;
    };
    interface HTMLCodeSnippetElement extends Components.CodeSnippet, HTMLStencilElement {
    }
    var HTMLCodeSnippetElement: {
        prototype: HTMLCodeSnippetElement;
        new (): HTMLCodeSnippetElement;
    };
    interface HTMLLandingPageElement extends Components.LandingPage, HTMLStencilElement {
    }
    var HTMLLandingPageElement: {
        prototype: HTMLLandingPageElement;
        new (): HTMLLandingPageElement;
    };
    interface HTMLNewsletterFormElement extends Components.NewsletterForm, HTMLStencilElement {
    }
    var HTMLNewsletterFormElement: {
        prototype: HTMLNewsletterFormElement;
        new (): HTMLNewsletterFormElement;
    };
    interface HTMLPhoneAnimatorElement extends Components.PhoneAnimator, HTMLStencilElement {
    }
    var HTMLPhoneAnimatorElement: {
        prototype: HTMLPhoneAnimatorElement;
        new (): HTMLPhoneAnimatorElement;
    };
    interface HTMLPipelineAnimatorElement extends Components.PipelineAnimator, HTMLStencilElement {
    }
    var HTMLPipelineAnimatorElement: {
        prototype: HTMLPipelineAnimatorElement;
        new (): HTMLPipelineAnimatorElement;
    };
    interface HTMLSiteBackdropElement extends Components.SiteBackdrop, HTMLStencilElement {
    }
    var HTMLSiteBackdropElement: {
        prototype: HTMLSiteBackdropElement;
        new (): HTMLSiteBackdropElement;
    };
    interface HTMLSiteImgElement extends Components.SiteImg, HTMLStencilElement {
    }
    var HTMLSiteImgElement: {
        prototype: HTMLSiteImgElement;
        new (): HTMLSiteImgElement;
    };
    interface HTMLWhyAppflowElement extends Components.WhyAppflow, HTMLStencilElement {
    }
    var HTMLWhyAppflowElement: {
        prototype: HTMLWhyAppflowElement;
        new (): HTMLWhyAppflowElement;
    };
    interface HTMLElementTagNameMap {
        "anchor-link": HTMLAnchorLinkElement;
        "app-burger": HTMLAppBurgerElement;
        "app-icon": HTMLAppIconElement;
        "appflow-activator": HTMLAppflowActivatorElement;
        "appflow-site": HTMLAppflowSiteElement;
        "appflow-site-footer": HTMLAppflowSiteFooterElement;
        "appflow-site-header": HTMLAppflowSiteHeaderElement;
        "appflow-site-routes": HTMLAppflowSiteRoutesElement;
        "code-snippet": HTMLCodeSnippetElement;
        "landing-page": HTMLLandingPageElement;
        "newsletter-form": HTMLNewsletterFormElement;
        "phone-animator": HTMLPhoneAnimatorElement;
        "pipeline-animator": HTMLPipelineAnimatorElement;
        "site-backdrop": HTMLSiteBackdropElement;
        "site-img": HTMLSiteImgElement;
        "why-appflow": HTMLWhyAppflowElement;
    }
}
declare namespace LocalJSX {
    interface AnchorLink {
        "to"?: string;
    }
    interface AppBurger {
        "onBurgerClick"?: (event: CustomEvent<any>) => void;
    }
    interface AppIcon {
        "name"?: string;
    }
    interface AppflowActivator {
    }
    interface AppflowSite {
    }
    interface AppflowSiteFooter {
    }
    interface AppflowSiteHeader {
    }
    interface AppflowSiteRoutes {
    }
    interface CodeSnippet {
        "code"?: string;
        "language"?: string;
    }
    interface LandingPage {
    }
    interface NewsletterForm {
    }
    interface PhoneAnimator {
    }
    interface PipelineAnimator {
    }
    interface SiteBackdrop {
        "visible"?: boolean;
    }
    interface SiteImg {
        "alt"?: string;
        "dimensions"?: string;
        "loading"?: 'lazy';
        "name"?: string;
        "path"?: string;
        "type"?: string;
    }
    interface WhyAppflow {
    }
    interface IntrinsicElements {
        "anchor-link": AnchorLink;
        "app-burger": AppBurger;
        "app-icon": AppIcon;
        "appflow-activator": AppflowActivator;
        "appflow-site": AppflowSite;
        "appflow-site-footer": AppflowSiteFooter;
        "appflow-site-header": AppflowSiteHeader;
        "appflow-site-routes": AppflowSiteRoutes;
        "code-snippet": CodeSnippet;
        "landing-page": LandingPage;
        "newsletter-form": NewsletterForm;
        "phone-animator": PhoneAnimator;
        "pipeline-animator": PipelineAnimator;
        "site-backdrop": SiteBackdrop;
        "site-img": SiteImg;
        "why-appflow": WhyAppflow;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "anchor-link": LocalJSX.AnchorLink & JSXBase.HTMLAttributes<HTMLAnchorLinkElement>;
            "app-burger": LocalJSX.AppBurger & JSXBase.HTMLAttributes<HTMLAppBurgerElement>;
            "app-icon": LocalJSX.AppIcon & JSXBase.HTMLAttributes<HTMLAppIconElement>;
            "appflow-activator": LocalJSX.AppflowActivator & JSXBase.HTMLAttributes<HTMLAppflowActivatorElement>;
            "appflow-site": LocalJSX.AppflowSite & JSXBase.HTMLAttributes<HTMLAppflowSiteElement>;
            "appflow-site-footer": LocalJSX.AppflowSiteFooter & JSXBase.HTMLAttributes<HTMLAppflowSiteFooterElement>;
            "appflow-site-header": LocalJSX.AppflowSiteHeader & JSXBase.HTMLAttributes<HTMLAppflowSiteHeaderElement>;
            "appflow-site-routes": LocalJSX.AppflowSiteRoutes & JSXBase.HTMLAttributes<HTMLAppflowSiteRoutesElement>;
            "code-snippet": LocalJSX.CodeSnippet & JSXBase.HTMLAttributes<HTMLCodeSnippetElement>;
            "landing-page": LocalJSX.LandingPage & JSXBase.HTMLAttributes<HTMLLandingPageElement>;
            "newsletter-form": LocalJSX.NewsletterForm & JSXBase.HTMLAttributes<HTMLNewsletterFormElement>;
            "phone-animator": LocalJSX.PhoneAnimator & JSXBase.HTMLAttributes<HTMLPhoneAnimatorElement>;
            "pipeline-animator": LocalJSX.PipelineAnimator & JSXBase.HTMLAttributes<HTMLPipelineAnimatorElement>;
            "site-backdrop": LocalJSX.SiteBackdrop & JSXBase.HTMLAttributes<HTMLSiteBackdropElement>;
            "site-img": LocalJSX.SiteImg & JSXBase.HTMLAttributes<HTMLSiteImgElement>;
            "why-appflow": LocalJSX.WhyAppflow & JSXBase.HTMLAttributes<HTMLWhyAppflowElement>;
        }
    }
}
